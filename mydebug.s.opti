.data
	_true                :  .asciiz "true"
	_false               :  .asciiz "false"
	_read_int            :  .asciiz "Enter int: "
	_segfault_mess       :  .asciiz "Invalid read of size 4
"

			# TOS Global
	temp_16              :  .asciiz "\n"
	var_tab              :  .byte
	temp_3               :  .byte 1
	temp_7               :  .byte 0
	temp_15              :  .byte 0
	temp_20              :  .byte 0
	temp_25              :  .byte 0
	temp_36              :  .byte 0
	temp_37              :  .byte 0
	temp_38              :  .byte 0
	temp_39              :  .byte 0
	temp_40              :  .byte 0
	temp_0               :  .word 1
	temp_4               :  .word 2
	temp_8               :  .word 3

.text
.globl main

			# Internal functions

_exit:
	li     $v0    10
	syscall

_segfault:
	li     $v0    4
	la     $a0    _segfault_mess
	syscall
	j      _exit

_compind:
	blt    $t0    $t1    _segfault
	bgt    $t0    $t2    _segfault
	sub    $t3    $t0    $t1
	mul    $t4    $t3    $t7
	add    $t8    $t8    $t4
	sub    $t3    $t2    $t1
	add    $t4    $t3    1
	mul    $t7    $t7    $t4
	jr     $ra

			# User functions

main:
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# var_tab[$t8] := temp_3
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    temp_3
	sb     $t5    ($t1)
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# var_tab[$t8] := temp_7
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    temp_7
	sb     $t5    ($t1)
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# var_tab[$t8] := temp_3
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    temp_3
	sb     $t5    ($t1)
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# temp_15 := var_tab[$t8]
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    ($t1)
	sb     $t5    temp_15
			# print bool temp_15
	lb     $t0    temp_15
	beq    $t0    $zero  tlabel_0
	la     $a0    _true
	j      tlabel_1

tlabel_0:
	la     $a0    _false

tlabel_1:
	li     $v0    4
	syscall
			# print string temp_16
	li     $v0    4
	la     $a0    temp_16
	syscall
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# temp_20 := var_tab[$t8]
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    ($t1)
	sb     $t5    temp_20
			# print bool temp_20
	lb     $t0    temp_20
	beq    $t0    $zero  tlabel_2
	la     $a0    _true
	j      tlabel_3

tlabel_2:
	la     $a0    _false

tlabel_3:
	li     $v0    4
	syscall
			# print string temp_16
	li     $v0    4
	la     $a0    temp_16
	syscall
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# temp_25 := var_tab[$t8]
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    ($t1)
	sb     $t5    temp_25
			# print bool temp_25
	lb     $t0    temp_25
	beq    $t0    $zero  tlabel_4
	la     $a0    _true
	j      tlabel_5

tlabel_4:
	la     $a0    _false

tlabel_5:
	li     $v0    4
	syscall
			# print string temp_16
	li     $v0    4
	la     $a0    temp_16
	syscall
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_0
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# temp_39 := var_tab[$t8]
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    ($t1)
	sb     $t5    temp_39
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_4
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# temp_36 := var_tab[$t8]
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    ($t1)
	sb     $t5    temp_36
			# Compute array index of var_tab
	li     $t8    0
	li     $t7    1
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	lw     $t0    temp_8
	li     $t1    1
	li     $t2    10
	jal    _compind
	li     $t9    1000
	bgt    $t8    $t9    _segfault
			# temp_37 := var_tab[$t8]
	la     $t3    var_tab
	add    $t1    $t8    $t3
	lb     $t5    ($t1)
	sb     $t5    temp_37
			# temp_38 := temp_36 AND temp_37
	lb     $t0    temp_36
	lb     $t1    temp_37
	and    $t2    $t0    $t1
	beq    $t2    $zero  tlabel_6
	li     $t3    1
	j      tlabel_7

tlabel_6:
	li     $t3    0

tlabel_7:
	sb     $t3    temp_38
			# temp_40 := temp_39 OR temp_38
	lb     $t0    temp_39
	lb     $t1    temp_38
	or     $t2    $t0    $t1
	beq    $t2    $zero  tlabel_8
	li     $t3    1
	j      tlabel_9

tlabel_8:
	li     $t3    0

tlabel_9:
	sb     $t3    temp_40
			# print bool temp_40
	lb     $t0    temp_40
	beq    $t0    $zero  tlabel_10
	la     $a0    _true
	j      tlabel_11

tlabel_10:
	la     $a0    _false

tlabel_11:
	li     $v0    4
	syscall
			# print string temp_16
	li     $v0    4
	la     $a0    temp_16
	syscall
			# Exit program
	j      _exit
